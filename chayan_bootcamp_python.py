# -*- coding: utf-8 -*-
"""CHAYAN_BOOTCAMP_PYTHON.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EBz0o8Z5GGdvWguYX_uzb2BmIy3GdSk_
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# % matplotlib inline
from scipy import stats

df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv')

df.describe()

df.info()

corr = df.corr()
print(corr)
sns.heatmap(corr, 
         xticklabels=corr.columns, 
         yticklabels=corr.columns)

sns.pairplot(df, vars=["Pregnancies", "Glucose","BloodPressure","SkinThickness","Insulin", "BMI","DiabetesPedigreeFunction", "Age"],hue="Outcome")
plt.title("Pairplot of Variables by Outcome")

Q1 = df.quantile(0.25)
Q3 = df.quantile(0.75)
IQR = Q3 - Q1
print(IQR)

df = pd.DataFrame(data = np.random.random(size=(9,9)), columns = ['Pregnancies','Glucose','BloodPressure','SkinThickness', 'Insulin', 'BMI','DiabetesPedigreeFunction', 'Age', 'Outcome'])
plt.figure(figsize=(20,4))
sns.boxplot(x="variable", y="value", width= .8, data=pd.melt(df))
plt.show()

df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv')
print("dimension of diabetes data: {}".format(df.shape))
plt.hist(df.Outcome, color ="m")

df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv')
print("dimension of diabetes data: {}".format(df.shape))
plt.hist(df.Outcome, color ="m")
plt.hist(df.Age, color ="g")

df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv')
age_groups = df.groupby("Age")
print(df[df.Outcome == 0].groupby('Age')['Age'].count())
X = (df[df.Outcome == 0].groupby('Age')['Age'].count())
plt.hist(X, color ="m")

df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv')
age_groups = df.groupby("Age")
print(df[df.Outcome == 1].groupby('Age')['Age'].count())
X = (df[df.Outcome == 1].groupby('Age')['Age'].count())
plt.hist(X, color ="G")